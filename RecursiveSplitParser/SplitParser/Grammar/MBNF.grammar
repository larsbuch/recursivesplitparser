Grammar: CEBNF
TokenSplitter: None

/*
Context
- defined in left part of rule as <rule name (context name)> meaning rule only active in specified context
- switch on using Context(context name, on) in code extension
- switch off using Context(context name, off) in code extension
- some rules are easier done

MBNF (Modern BNF)
CBNF with explicit whitespace, regex as tokendefiner for terminals, optional context modifier and explicit markup of non-terminals

*/


*/ non-terminals /*
<comment>               ::= COMMENT_START <comment_text> COMMENT_END
<comment_text>          ::= <text> EXCEPT(COMMENT_END)
<rule>                  ::= RULE_START <left side> ASSIGN <right side> RULE_END
<left side>             ::= <non-terminal leftside> OR <terminal leftside>
<terminal leftside>     ::= UPPER_CASE_IDEINTIFIER EXCEPT(<terminal keywords>)
<non-terminal leftside> ::= NON_TERMINAL_START <rule name> (PARANTHESIS_START <context names> PARANTHESIS_END)? NON_TERMINAL_END
<right side>            ::= (<terminal> OR <non-terminal>) (<space> <terminal> OR <non-terminal>)* (CODE_START <code> CODE_END)?
<rule name>             ::= lower-case identifier except keywords
<terminal>              ::= defined identifier in terminal leftside
<optional space>        ::= SPACE*
<non-terminal keywords> ::= LOWER_CASE_IDENTIFIER EXCEPT
<terminal keywords>     ::= EXCEPT | SPACE
<code>                  ::= (<codelines> | <context-switch> ) <optional space> <code>
<codelines>             ::=
<context-switch>        ::= CONTEXT PARANTHESIS_START contextlist COMMA ( ON | OFF )  PARANTHESIS_END

/* terminals */
SPACE                   ::= " " /* expand to regex space */
EXCEPT                  ::= "EXCEPT"
OR                      ::= "|"
ASSIGN                  ::= "::="
RULE_START              ::= "^" 
RULE_END                ::= ";"
CODE_START              ::= "{" /* context code start? */
CODE_END                ::= "}" /* context code end? */
NON_TERMINAL_START      ::= "<"
NON_TERMINAL_END        ::= ">"
UPPER_CASE_IDENTIFIER   ::= "" /* Upper case start with _ and numbers as added */
LOWER_CASE_IDENTIFIER   ::= "" /* Upper case start with _ and numbers as added */
COMMENT_START           ::= "/*"
COMMENT_END             ::= "*/"
CONTEXT                 ::= "Context"
PARANTHESIS_START       ::= "("
PARANTHESIS_END         ::= ")"
COMMA                   ::= ","
ON                      ::= "on"
OFF                     ::= "off"
